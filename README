# WORK IN PROGRESS

# FinDLNA - Jellyfin DLNA Proxy Server

A lightweight DLNA Media Server proxy that runs on Raspberry Pi and exposes remote Jellyfin server libraries as a local UPnP/DLNA MediaServer. This allows DLNA-compatible devices (smart TVs, game consoles, media players) to browse and stream content from your Jellyfin server without direct network access to it.

## Overview

FinDLNA acts as a bridge between your Jellyfin media server and DLNA clients on your local network. The Raspberry Pi handles SSDP broadcasts, UPnP service discovery, and content directory browsing while proxying all media streams from the remote Jellyfin server.

## Key Features

- **Zero Local Storage**: No caching of media files or artwork - everything is streamed directly from Jellyfin
- **Transcoding Delegation**: All heavy processing (transcoding, format conversion) is handled by the Jellyfin server
- **Web Configuration**: Simple web interface for setting up Jellyfin connection details
- **Device Profile Support**: Uses Jellyfin's device profile system for client compatibility
- **Standard DLNA Compliance**: Works with any UPnP/DLNA compatible device

## How It Works

### Architecture

1. **SSDP Discovery**: Broadcasts UPnP MediaServer announcements on the local network
2. **Content Directory Service**: Handles DLNA browse requests and returns DIDL-Lite formatted metadata
3. **Media Streaming Proxy**: Proxies media streams from Jellyfin to DLNA clients
4. **Jellyfin Integration**: Uses official Jellyfin C# SDK for all server interactions

### Data Flow

1. DLNA client discovers FinDLNA server via SSDP
2. Client browses content through UPnP ContentDirectory service
3. FinDLNA fetches library structure and metadata from Jellyfin
4. When client requests media, FinDLNA:
   - Calls Jellyfin's PlaybackInfo API to get stream URL
   - Opens connection to Jellyfin stream (direct or transcoded)
   - Proxies bytes to DLNA client in real-time
   - Reports playback progress back to Jellyfin

## Setup

### Requirements

- Raspberry Pi (any model with network connectivity)
- .NET 9.0 runtime
- Access to a Jellyfin server
- Local network with multicast support

### Installation

1. Clone the repository
2. Copy `